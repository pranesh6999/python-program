#reverse string using slicing operator:hsenarp

s="pranesh"
output=s[ ::-1]
print(output)

#reverse string using reversed function:hsenarp

s="pranesh"
p=reversed(s)
output=''.join(p)
print(output)

#reverse string using coding:hsenarp

s='pranesh'
output=""
i=len(s)-1
while i>=0:
    output=output+s[i]
    i=i-1
print(output)
    

#reverse word using split operator:brother my is ezhil
s="ezhil is my brother"
l=s.split()
l1=l[::-1]
output=' '.join(l1)
print(output)

#reverse internal content of each word: lihze si ym rehtorb
s='ezhil is my brother'
l=s.split()
l1=[]
for i in l:
    l1.append(i[::-1])
    output=' '.join(l1)
print(output)

#reverse internal content of every second word:ezhil si my rehtorb
s='ezhil is my brother'
l=s.split()
i=0
l1=[]
while i<len(l):
    if i%2==0:
        l1.append(l[i])
    else:
        l1.append(l[i][::-1])
    i+=1
    output=' '.join(l1)
print(output)

#to merge two character :p e r z a h n i e l s h
s='pranesh'
p='ezhil'
i,j=0,0
output=''
while i<len(s) or j<len(p):
    if i<len(s):
        output=output+s[i]
        i+=1
    if j<len(p):
        output=output+p[j]
        j+=1
    z=' '.join(output)
print(z)

#sort the chrc:a b d 1 3 4
s='b4a1d3'
alphabet=[]
digit=[]
output=''
for ch in s:
    if ch.isalpha():
        alphabet.append(ch)
    else:
        digit.append(ch)
        output=' '.join(sorted(alphabet)+sorted(digit))
print(output)

#aaabbbbccccc

s='a3b4c5'
output=''
for ch in s:
    if ch.isalpha():
        x=ch
    else:
        d=int(ch)
        output=output+x*d
print(output)

#aaabbc
s='3a2b1c'
output=''
for ch in s:
    if ch.isdigit():
        d=int(ch)
    else:
        x=ch
        output=output+x*d
print(output)

4a3b3c1s
s='aaaabbbcccs'
previous=s[0]
output=''
c=1
i=1
while i<len(s):
    if s[i]==previous:
        c+=1
    else:
        output=output+str(c)+previous
        c=1
        previous=s[i]
    if i==len(s)-1:
        output=output+str(c)+previous
    i+=1
print(output)
        
aeknbd
s='a4k3b2'
output=''
for ch in s:
    if ch.isalpha():
        output=output+ch
        x=ch
    else:
        d=int(ch)
        newc=chr(ord(x)+d)
        output=output+newc
print(output)


